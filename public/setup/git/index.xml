<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Git on CFSS: Computing for the Social Sciences</title><link>https://cfssmacss.netlify.app/setup/git/</link><description>Recent content in Git on CFSS: Computing for the Social Sciences</description><generator>Hugo</generator><language>en</language><lastBuildDate>Tue, 27 Sep 2022 00:00:00 -0500</lastBuildDate><atom:link href="https://cfssmacss.netlify.app/setup/git/index.xml" rel="self" type="application/rss+xml"/><item><title>What is Git?</title><link>https://cfssmacss.netlify.app/setup/git/what-is-git/</link><pubDate>Sun, 25 Sep 2022 00:00:00 -0500</pubDate><guid>https://cfssmacss.netlify.app/setup/git/what-is-git/</guid><description>&lt;h2 id="why-git">Why Git?&lt;/h2>
&lt;p>In this course (and in your own work), you will be writing lots of programs. Generally the first draft is not the final draft, be it a research paper or a computer script. We want a way to track our changes over time.&lt;/p>
&lt;p>Perhaps this is to make sure we have a record of what we&amp;rsquo;ve already done that doesn&amp;rsquo;t work, so we can avoid doing it again. Or maybe we want to share our code with collaborators who are working on a project with us. How can we do this?&lt;/p></description></item><item><title>Install Git</title><link>https://cfssmacss.netlify.app/setup/git/git/</link><pubDate>Sun, 25 Sep 2022 00:00:00 -0500</pubDate><guid>https://cfssmacss.netlify.app/setup/git/git/</guid><description>&lt;p>This page provides instructions to install Git for Windows, Mac OX, and Linux.&lt;/p>
&lt;h1 id="git-installation-windows">Git Installation: Windows&lt;/h1>
&lt;p>Install &lt;a href="https://git-for-windows.github.io/">Git for Windows&lt;/a>, also known as &lt;code>msysgit&lt;/code> or &amp;ldquo;Git Bash&amp;rdquo;, to get Git in addition to some other useful tools, such as the Bash shell. Yes, all those names are totally confusing, but you might encounter them elsewhere and I want you to be well-informed.&lt;/p>
&lt;p>This method of installing Git for Windows leaves the Git executable in a conventional location, which will help you and other programs, e.g. RStudio, find it and use it. This also supports a transition to more expert use, because the &amp;ldquo;Git Bash&amp;rdquo; shell will be useful as you venture outside of R/RStudio.&lt;/p></description></item><item><title>Git clients</title><link>https://cfssmacss.netlify.app/setup/git/git-clients/</link><pubDate>Sun, 25 Sep 2022 00:00:00 -0500</pubDate><guid>https://cfssmacss.netlify.app/setup/git/git-clients/</guid><description>&lt;p>You can use Git for version control through the command line or through a Git client. For the first option, see &lt;a href="https://cfssmacss.netlify.app/setup/shell/">What is the Shell?&lt;/a>. Here we are going to focus on Git clients.&lt;/p>
&lt;p>Learning how and why to use Git can be rough. Therefore, using a client, rather than the command line, is usually helpful when getting started. Most clients help you interface with Git and GitHub through a user-friendly Graphical User Interface (GUI), but they still perform the same underlying Git commands that you would perform through the command line.&lt;/p></description></item><item><title>Configure Git</title><link>https://cfssmacss.netlify.app/setup/git/git-configure/</link><pubDate>Tue, 27 Sep 2022 00:00:00 -0500</pubDate><guid>https://cfssmacss.netlify.app/setup/git/git-configure/</guid><description>&lt;div class="alert alert-info" role="alert">
&lt;pre>&lt;code>note
&lt;/code>&lt;/pre>
&lt;/div>
&lt;p>To ensure minimal challenges using Git during the class, we want to configure Git now with some default settings. &lt;strong>You only have to do this once per machine.&lt;/strong>&lt;/p>
&lt;h1 id="identify-yourself">Identify yourself&lt;/h1>
&lt;p>In order to track changes and attribute them to the correct user, we need to tell Git your name and email address. Run the following commands from the R console:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-r" data-lang="r">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">usethis&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">::&lt;/span>&lt;span style="color:#000">use_git_config&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">user.name&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Jean Clipperton&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">user.email&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;email@gmail.com&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Replace &lt;code>Jean Clipperton&lt;/code> and &lt;code>email@gmail.com&lt;/code> with your name and email address. Your name could be your GitHub username, or your actual first and last name. &lt;strong>Your email address must be the email address associated with your GitHub account.&lt;/strong>&lt;/p></description></item><item><title>Using Git within RStudio</title><link>https://cfssmacss.netlify.app/setup/git/git-with-rstudio/</link><pubDate>Sun, 09 Sep 2018 00:00:00 -0500</pubDate><guid>https://cfssmacss.netlify.app/setup/git/git-with-rstudio/</guid><description>&lt;p>Complete these steps after you have Installed Git (only if you are working with R Studio locally) and Configured Git (for both local and R Workbench option) to verify that everything works as expected. If you are not sure, begin by reading &lt;a href="https://cfssmacss.netlify.app/setup/">Start here: Software Options&lt;/a>.&lt;/p>
&lt;h1 id="step-0-make-sure-rstudio-can-find-git">Step 0: Make sure RStudio can find Git&lt;/h1>
&lt;h2 id="if-everything-is-installed-correctly">If everything is installed correctly&amp;hellip;&lt;/h2>
&lt;ul>
&lt;li>&lt;em>File &amp;gt; New Project&lt;/em>. If you see a Version Control options, that&amp;rsquo;s good. Do not select it. Instead, select &lt;em>New Directory &amp;gt; New Project&lt;/em>. Do you see a check box &amp;ldquo;Create a git repository&amp;rdquo;? If yes, that&amp;rsquo;s good. Check it.&lt;/li>
&lt;li>Give this test project a name and click &amp;ldquo;Create Project&amp;rdquo;. Do you see a &amp;ldquo;Git&amp;rdquo; tab in the upper right pane, the same one that has &amp;ldquo;Environment&amp;rdquo; and &amp;ldquo;History&amp;rdquo;? If yes, good.&lt;/li>
&lt;/ul>
&lt;p>If this worked, you can delete the project. You&amp;rsquo;ve set everything up correctly (if you are working on R Workbench this should automatically work). To delete the project, go to the &amp;ldquo;Files&amp;rdquo; tab (bottom right corner), select the project folder and click &amp;ldquo;Delete&amp;rdquo;&lt;/p></description></item></channel></rss>